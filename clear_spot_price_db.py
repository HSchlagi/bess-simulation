#!/usr/bin/env python3
"""
Skript zum L√∂schen der alten Spot-Preis-Daten aus der Datenbank
"""

from app import create_app, get_db

def clear_spot_price_data():
    """L√∂scht alle Spot-Preis-Daten aus der Datenbank"""
    app = create_app()
    
    with app.app_context():
        try:
            conn = get_db()
            cursor = conn.cursor()
            
            # Pr√ºfe Anzahl der vorhandenen Daten
            cursor.execute("SELECT COUNT(*) FROM spot_price")
            count_before = cursor.fetchone()[0]
            print(f"üìä Vorhandene Spot-Preis-Daten: {count_before}")
            
            if count_before > 0:
                # Zeige die ersten 5 Datens√§tze
                cursor.execute("SELECT timestamp, source FROM spot_price ORDER BY timestamp DESC LIMIT 5")
                print("üìã Erste 5 Datens√§tze:")
                for row in cursor.fetchall():
                    print(f"  {row[0]} - {row[1]}")
                
                # L√∂sche alle Spot-Preis-Daten
                cursor.execute("DELETE FROM spot_price")
                deleted_count = cursor.rowcount
                
                # Commit der √Ñnderungen
                conn.commit()
                
                print(f"‚úÖ {deleted_count} Spot-Preis-Daten erfolgreich gel√∂scht")
                
                # Pr√ºfe ob Tabelle jetzt leer ist
                cursor.execute("SELECT COUNT(*) FROM spot_price")
                count_after = cursor.fetchone()[0]
                print(f"üìä Verbleibende Spot-Preis-Daten: {count_after}")
                
            else:
                print("‚ÑπÔ∏è Keine Spot-Preis-Daten vorhanden")
                
        except Exception as e:
            print(f"‚ùå Fehler beim L√∂schen der Spot-Preis-Daten: {e}")
            conn.rollback()

if __name__ == '__main__':
    print("üßπ Bereinige Spot-Preis-Datenbank...")
    clear_spot_price_data()
    print("‚úÖ Fertig!")
