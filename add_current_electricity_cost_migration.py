#!/usr/bin/env python3
"""
Migration: Aktuelle Stromkosten zur Project Tabelle hinzuf√ºgen
"""

import sqlite3
import os

def add_current_electricity_cost_column():
    """F√ºgt current_electricity_cost Spalte zur Project Tabelle hinzu"""
    
    db_path = 'instance/bess.db'
    
    if not os.path.exists(db_path):
        print("‚ùå Datenbank nicht gefunden:", db_path)
        return False
    
    try:
        conn = sqlite3.connect(db_path)
        cursor = conn.cursor()
        
        print("üîç √úberpr√ºfe current_electricity_cost Spalte...")
        
        # Pr√ºfe ob Spalte bereits existiert
        cursor.execute("PRAGMA table_info(project);")
        columns = cursor.fetchall()
        column_names = [col[1] for col in columns]
        
        if 'current_electricity_cost' in column_names:
            print("‚úÖ Spalte current_electricity_cost existiert bereits")
            return True
        
        print("‚ûï F√ºge current_electricity_cost Spalte hinzu...")
        
        # Spalte hinzuf√ºgen mit Standardwert 12.5 Ct/kWh
        cursor.execute("""
            ALTER TABLE project 
            ADD COLUMN current_electricity_cost REAL DEFAULT 12.5
        """)
        
        # Best√§tige √Ñnderung
        cursor.execute("PRAGMA table_info(project);")
        columns = cursor.fetchall()
        column_names = [col[1] for col in columns]
        
        if 'current_electricity_cost' in column_names:
            print("‚úÖ Spalte current_electricity_cost erfolgreich hinzugef√ºgt")
            
            # Setze Standardwert f√ºr bestehende Projekte
            cursor.execute("""
                UPDATE project 
                SET current_electricity_cost = 12.5 
                WHERE current_electricity_cost IS NULL
            """)
            
            updated_rows = cursor.rowcount
            print(f"‚úÖ {updated_rows} bestehende Projekte mit Standardwert 12.5 Ct/kWh aktualisiert")
            
        else:
            print("‚ùå Fehler beim Hinzuf√ºgen der Spalte")
            return False
        
        conn.commit()
        conn.close()
        return True
        
    except Exception as e:
        print(f"‚ùå Fehler bei der Migration: {e}")
        return False

if __name__ == "__main__":
    print("üöÄ Starte Migration: Aktuelle Stromkosten")
    success = add_current_electricity_cost_column()
    
    if success:
        print("\n‚úÖ Migration erfolgreich abgeschlossen")
    else:
        print("\n‚ùå Migration fehlgeschlagen") 